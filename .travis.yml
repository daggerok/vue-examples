env:
  global:
  - TERM=dumb
  - secure: oP/muOICK9B+4eYo8V8AQJqJ0iqy2n9s2n+5XUJPDJh04PZdG/jRp5mpoHATdSqrCEoREuvP1HAww8mNCiZRjN1pMbKE6v6LvtuRYURpm3Uctnbgf6m3pA95upcf48TsHLPr30seQge0lwR39dx+PQ0bbsfywR81MzPu+gT2ExbxMg70MOOf2tILIGAPKkk/Zishf7an17VzgFDJZLLq8fZaKFbFE5jgA5OMU7lgSUrQadhXTgRWT6kUmt7pPByovLinzBZVl/wBbyoxcxF3HSNaLcUSgWXDTDfQHeRDblS78ERtQ+ywBEN9dPv9cwTrxgZcr5laAQjIJ22HNGyLT2gxodlxRs3awp7zY2aNsdcrnbNNSTh2gfZ2r3yd/CDkuNU46W5QsfLpvEgJlacle4JM91afCoYj2OFFSx09UHfp9kPbRwuXerhgIWuYGUwQ15dXR0csxxqLJYslDK8XucKGrPIxo8gi4+/cKeKLotR7b5VXEjdrZtRfnbWU4htYMcb+1nGItKmYyK2eFb4ShOhS2lXRhEGwzAOhn8C5MGKdABpaPLcBHcAyUpGFl76B4nRU4kXKyKPKBJoBs36eZMBYgsiKwZ8UD9id0WIHLAQInbXzvh4SbmClJV4SFwcIroKkGv+iQdRvFA21d0v1teYTHAeHot4bKVGVEaODP/M=
language: node_js
node_js: lts/*
notifications:
  email: false
git:
  quiet: true
  depth: false
addons:
  apt:
    update: true
    packages:
    - bash
    - curl
    - fonts-liberation
    - libappindicator1
    - google-chrome-stable
install: true
services: xvfb
before_install:
- export CHROME_BIN=/usr/bin/google-chrome
- export DISPLAY=:99.0
#
- export root=$(pwd)
- npm i -f -g -ED node-gyp
jobs:
  include:

#  - stage: test
#    node_js: lts/*
#    name: vue-bootstrap-css
#    script:
#    - cd ${root}/vue-bootstrap-css
#    - npm i
#    - npm run predeploy

  - stage: test
    node_js: lts/*
    name: refs-work-natively-with-DOM-elements
    script:
    - cd ${root}/refs-work-natively-with-DOM-elements
    - npm i
    - npm run predeploy

  - stage: test
    node_js: lts/*
    name: eventbus
    script:
    - cd ${root}/eventbus
    - npm i
    - npm run predeploy

  - stage: test
    node_js: lts/*
    name: responsive-web-design
    script:
    - cd ${root}/responsive-web-design
    - npm i
    - npm run predeploy
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

  - stage: test
    node_js: lts/*
    name: nuxt-server-side-rendering
    script:
    - cd ${root}/nuxt-server-side-rendering
    - npm i
    - npm run predeploy;
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

  - stage: test
    node_js: lts/*
    name: vuex-map-getters-and-map-actions
    script:
    - cd ${root}/vuex-map-getters-and-map-actions
    - npm i
    - npm run predeploy
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

  - stage: test
    node_js: lts/*
    name: vue-material
    script:
    - cd ${root}/vue-material
    - npm i
    - npm run predeploy
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

  - stage: test
    node_js: lts/*
    name: materialize-css
    script:
    - cd ${root}/materialize-css
    - npm i
    - npm run predeploy
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

  - stage: test
    node_js: lts/*
    name: vuex-contact-list
    script:
    - cd ${root}/vuex-contact-list
    - npm i
    - npm run predeploy
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

  - stage: test
    node_js: lts/*
    name: vuex-counter-todo
    script:
    - cd ${root}/vuex-counter-todo
    - npm install
    - npm run predeploy
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

  - stage: test
    node_js: lts/*
    name: hello-vuex
    script:
    - cd ${root}/hello-vuex
    - npm i
    - npm run predeploy
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

  - stage: test
    node_js: lts/*
    name: todo-list
    script:
    - cd ${root}/todo-list
    - npm install
    - npm run predeploy
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

  - stage: test
    node_js: lts/*
    name: hello-world
    script:
    - cd ${root}/hello-world
    - npm install
    - npm run predeploy
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

  - stage: test
    node_js: lts/*
    name: template
    script:
    - cd ${root}/template
    - npm install
    - npm run predeploy
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

#  - stage: test
#    node_js: lts/*
#    name: vuetifyjs-setup
#    script:
#      - cd ${root}/vuetifyjs-setup
#      - echo "TODO:\ FIXME:\ npm i fails:\ https://github.com/angular/angular/issues/13935"
#      - npm i -f
#      - npm run predeploy;
#      - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
#      - npm run build -- --report
  - stage: test
    node_js: lts/*
    name: vuetifyjs-setup
    script:
    - cd ${root}/vuetifyjs-setup
    - cp firebase.js.default firebase.js || true
    - echo "TODO:\ FIXME:\ npm i fails:\ https://github.com/angular/angular/issues/13935"
    - npm i -f
    - npm run predeploy
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

#  - stage: test
#    node_js: lts/*
#    name: firebase-using-vuefire
#    script:
#      - cd ${root}/firebase-using-vuefire
#      - echo "TODO:\ FIXME:\ npm i fails:\ https://github.com/angular/angular/issues/13935"
#      - npm i -f
#      - npm run predeploy;
#      - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
#      - npm run build -- --report
  - stage: test
    node_js: lts/*
    name: firebase-using-vuefire
    script:
    - cd ${root}/firebase-using-vuefire
    - cp firebase.js.default firebase.js || true
    - echo "TODO:\ FIXME:\ npm i fails:\ https://github.com/angular/angular/issues/13935"
    - npm i -f
    - npm run predeploy
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

#  - stage: test
#    node_js: lts/*
#    name: some-vuetify-app
#    script:
#      - cd ${root}/some-vuetify-app
#      - echo "TODO:\ FIXME:\ npm i fails:\ https://github.com/angular/angular/issues/13935"
#      - npm i -f
#      - npm run predeploy;
#      - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
#      - npm run build -- --report
  - stage: test
    node_js: lts/*
    name: some-vuetify-app
    script:
    - cd ${root}/some-vuetify-app
    - cp firebase.config.js.default firebase.config.js || true
    - echo "TODO:\ FIXME:\ npm i fails:\ https://github.com/angular/angular/issues/13935"
    - npm i -f
    - npm run predeploy
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

#  - stage: test
#    node_js: lts/*
#    name: vuetify
#    script:
#      - cd ${root}/vuetify
#      - echo "TODO:\ FIXME:\ npm i fails:\ https://github.com/angular/angular/issues/13935"
#      - npm i -f
#      - npm run predeploy;
#      - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
#      - npm run build -- --report
  - stage: test
    node_js: lts/*
    name: vuetify
    script:
    - cd ${root}/vuetify
    - cp firebase.config.js.default firebase.config.js || true
    - echo "TODO:\ FIXME:\ npm i fails:\ https://github.com/angular/angular/issues/13935"
    - npm i -f
    - npm run predeploy
    - if [ -f npm-debug.log ]; then cat npm-debug.log; fi;
    - npm run build -- --report

  - stage: deploy
    jdk: openjdk11
    name: GitHub release and GitHub pages deployment (openjdk11)
    script: skip
    if: branch = "master" AND type NOT IN (pull_request)
    before_deploy:
    - if [ "$TRAVIS_PULL_REQUEST" != "false" ] || [ ".$TRAVIS_BRANCH" != ".master" ] ; then exit 0 ; fi
    - env
    # publish tag release
    - set -e
    #- cd ${root}
    - ./mvnw -Pdocs >/dev/null
    - ls .
    - ls target/generated-docs
    deploy:
      provider: pages
      skip-cleanup: true
      # travis encrypt GITHUB_TOKEN=<your github repo token> --add
      github-token: "$GITHUB_TOKEN"
      keep-history: true
      on:
        branch: master
      local-dir: target/generated-docs
      target_branch: gh-pages

cache:
  npm: true
  packages: true
  directories:
  - node_modules/
  - ~/.n*
